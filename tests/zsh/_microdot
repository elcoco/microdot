#compdef _microdot md

# TODO format commands with helptext
MD_CMD="md"

_microdot() {
    local line state

    # -C sets context vars like $line and $state
    # -s allows single letter commands
    _arguments -C -s {-i,--init}'[init dotfile]:filename:_files' \
                     {-l,--link}'[link dotfile]:arg:->args' \
                     {-u,--unlink}'[unlink dotfile]:arg:->args' \
                     {-x,--to-decrypted}'[encrypt dotfile]:arg:->args' \
                     {-e,--to-encrypted}'[decrypt dotfile]:arg:->args' \
                     {-c,--channel}'[get channels]:arg:->args' \
                     {-d,--dotfiles-dir}'[specify dotfiles dir]:filename:_files' \
                     {-f,--force}'[use the force]::' \
                     {-D,--debug}'[enable debugging]::' \
                     {-s,--sync}'[sync]::' \
                     {-w,--watch}'[watch]::' \
                     {-g,--use-git}'[use git]::' \
                     {-h,--help}'[help]::' \
                     "*::arg:->args"

    case $words[-2] in
        (-l|--link)
            _get_dotfiles
            ;;
        (-u|--unlink)
            _get_dotfiles
            ;;
        (-x|--to-decrypted)
            _get_dotfiles
            ;;
        (-e|--to-encrypted)
            _get_dotfiles
            ;;
        (-c|--channel)
            _get_channels
            ;;
        *)
            ;;
    esac
    return 0


    case "$state" in
        cmds)
            _arguments -s $($MD_CMD --get-opts)
            ;;
        args)

            case $words[-2] in
                (-l|--link)
                    _get_dotfiles
                    ;;
                (-u|--unlink)
                    _get_dotfiles
                    ;;
                (-c|--channel)
                    _get_channels
                    ;;
            esac
            ;;
    esac
    return 0
}

_get_dotfiles() {
    # if channel is specified, show only dotfiles for this channel
    for (( i=0 ; i<${#words[@]} ; i++ )) ; do
        if [[ "${words[i]}" == '--channel' || "${words[i]}" == '-c' ]] ; then
            channel="${words[i+1]}"
        fi
    done
    
    if [[ -z $channel ]] ; then
        _values $($MD_CMD --get-dotfiles)
    else
        dotfiles=$($MD_CMD --channel "$channel" --get-dotfiles)
        if [[ ! -z $dotfiles ]] ; then
            _values "channels" $dotfiles
        fi
    fi

}

function _get_channels {
    _values "channels" $($MD_CMD --get-channels)
}
